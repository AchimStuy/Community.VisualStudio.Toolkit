<platform:DialogWindow 
    x:Class="TestExtension.CustomizedStylesDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:platform="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
    xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    mc:Ignorable="d" 
    d:DesignHeight="450" 
    d:DesignWidth="800"
    toolkit:Themes.UseVsTheme="True"
    Width="300"
    Height="400"
    Title="Customized Styles"
    WindowStartupLocation="CenterOwner"
    ShowInTaskbar="False"
    >

    <Window.Resources>
        <ResourceDictionary>
            <!-- 
            To customize a style provided by the toolkit, you need to make the resources 
            available by including the resource dictionary from the toolkit:
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/>
            </ResourceDictionary.MergedDictionaries>

            <!--
            Now you can create your own styles that are based on the toolkit's styles.
            -->
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Static toolkit:ToolkitResourceKeys.TextBoxStyleKey}}">
                <Setter Property="BorderBrush" Value="Red" />
            </Style>

            <!--
            The toolkit only defines a few customized styles. Most styles come from the default Visual Studio
            styles. These can be referenced using the keys from `Microsoft.VisualStudio.Shell.VsResourceKeys`.
            -->
            <Style TargetType="Button" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.ThemedDialogButtonStyleKey}}">
                <Setter Property="Foreground" Value="Green" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Orientation="Vertical" Margin="10">
        <TextBox 
            Text="This TextBox uses the style from the toolkit, but extends it to have a red border."
            AcceptsReturn="True"
            Height="50"
            TextWrapping="Wrap"
            />

        <Button
            Content="Green text on a button"
            Margin="0,10,0,0"
            />
    </StackPanel>
</platform:DialogWindow>
